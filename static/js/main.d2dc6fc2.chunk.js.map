{"version":3,"sources":["FeedbackOptions/FeedbackOptions.module.css","Counter/Counter.module.css","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","Section/Section.js","Counter/Counter.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onGoodBtn","onNeutralBtn","onBadBtn","className","s","btnGood","onClick","btnNeutral","btnBad","Statistics","good","neutral","bad","total","percentage","Section","title","children","Counter","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","useEffect","console","log","container","prevState","listStat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,IAAM,6BAA6B,QAAU,4DAA4D,WAAa,+DAA+D,OAAS,6D,kBCAhND,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,4B,8KCgBrDC,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAA5B,OACtB,qCACE,wBAAQC,UAAWC,IAAEC,QAASC,QAASN,EAAvC,kBAGA,wBAAQG,UAAWC,IAAEG,WAAYD,QAASL,EAA1C,qBAGA,wBAAQE,UAAWC,IAAEI,OAAQF,QAASJ,EAAtC,qBCiBWO,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,mCAEE,qCACE,qBAAIX,UAAU,WAAd,mBACQ,sBAAMA,UAAU,YAAhB,SAA6BO,OAErC,qBAAIP,UAAU,WAAd,sBACW,sBAAMA,UAAU,YAAhB,SAA6BQ,OAExC,qBAAIR,UAAU,WAAd,kBACO,sBAAMA,UAAU,YAAhB,SAA6BS,OAEpC,qBAAIT,UAAU,WAAd,oBACS,sBAAMA,UAAU,YAAhB,SAA6BU,OAEtC,qBAAIV,UAAU,WAAd,+BAEE,uBAAMA,UAAU,YAAhB,cAA8BW,EAA9B,iBClBO,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACa,0BAAVD,EACC,uDAEA,4CAGDC,KCLQ,SAASC,IAAW,IAAD,EACRC,mBAAS,GADD,mBACzBT,EADyB,KACnBU,EADmB,OAEFD,mBAAS,GAFP,mBAEzBR,EAFyB,KAEhBU,EAFgB,OAGVF,mBAAS,GAHC,mBAGzBP,EAHyB,KAGpBU,EAHoB,KAI1BC,EAAqBb,EAAOC,EAAUC,EACtCY,EAAkCC,KAAKC,MACnC,IAAPhB,EAAca,GAmBjB,OAJAI,qBAAU,WACRC,QAAQC,IAAI,QACX,CAACnB,EAAMC,EAASC,IAGjB,qBAAKT,UAAWC,IAAE0B,UAAlB,SACE,sBAAK3B,UAAU,WAAf,UACE,cAACY,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,UArBY,WACpBoB,GAAQ,SAAAW,GAAS,OAAIA,EAAY,MAqBzB9B,aAlBe,WACvBoB,GAAW,SAAAU,GAAS,OAAIA,EAAY,MAkB5B7B,SAfY,WACpBoB,GAAO,SAAAS,GAAS,OAAIA,EAAY,UAkB5B,cAAChB,EAAD,CAASC,MAAM,aAAf,SACE,oBAAIb,UAAWC,IAAE4B,SAAjB,SACE,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,WAAYU,aCvCXS,MARf,WACE,OACE,mCACE,cAACf,EAAD,CAASR,KAAM,EAAGC,QAAS,EAAGC,IAAK,OCDzCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d2dc6fc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__ptEqA\",\"btnGood\":\"FeedbackOptions_btnGood__2uL-p FeedbackOptions_btn__ptEqA\",\"btnNeutral\":\"FeedbackOptions_btnNeutral__1hp8a FeedbackOptions_btn__ptEqA\",\"btnBad\":\"FeedbackOptions_btnBad__12spq FeedbackOptions_btn__ptEqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_container__1KZAl\",\"listStat\":\"Counter_listStat__28893\"};","import React from 'react';\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onGoodBtn, onNeutralBtn, onBadBtn }) => (\r\n  <>\r\n    <button className={s.btnGood} onClick={onGoodBtn}>\r\n      Good\r\n    </button>\r\n    <button className={s.btnNeutral} onClick={onNeutralBtn}>\r\n      Neutral\r\n    </button>\r\n    <button className={s.btnBad} onClick={onBadBtn}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n// import Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <>\r\n    {/*  */}\r\n    <>\r\n      <li className=\"itemStat\">\r\n        Good: <span className=\"countStat\">{good}</span>\r\n      </li>\r\n      <li className=\"itemStat\">\r\n        Neutral: <span className=\"countStat\">{neutral}</span>\r\n      </li>\r\n      <li className=\"itemStat\">\r\n        Bad: <span className=\"countStat\">{bad}</span>\r\n      </li>\r\n      <li className=\"itemStat\">\r\n        Total: <span className=\"countStat\">{total}</span>\r\n      </li>\r\n      <li className=\"itemStat\">\r\n        Positive feedback:\r\n        <span className=\"countStat\"> {percentage} %</span>\r\n      </li>\r\n    </>\r\n    {/*  */}\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n\r\n//  {total > 0 ? (\r\n\r\n//   ) : (\r\n//       <Notification message=\"No feedback given\"></Notification>\r\n//     )}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title === 'Please leave feedback' ? (\r\n        <h2>Please leave feedback</h2>\r\n      ) : (\r\n        <h3>Statistics</h3>\r\n      )}\r\n\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState, useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from '../Counter/Counter.module.css';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\n\r\nexport default function Counter() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const countTotalFeedback = good + neutral + bad;\r\n  const countPositiveFeedbackPercentage = Math.round(\r\n    (good * 100) / countTotalFeedback,\r\n  );\r\n\r\n  const handleGoodBtn = () => {\r\n    setGood(prevState => prevState + 1);\r\n  };\r\n\r\n  const handleNeutralBtn = () => {\r\n    setNeutral(prevState => prevState + 1);\r\n  };\r\n\r\n  const handleBadlBtn = () => {\r\n    setBad(prevState => prevState + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('op');\r\n  }, [good, neutral, bad]);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className=\"feedback\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onGoodBtn={handleGoodBtn}\r\n            onNeutralBtn={handleNeutralBtn}\r\n            onBadBtn={handleBadlBtn}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          <ul className={s.listStat}>\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback}\r\n              percentage={countPositiveFeedbackPercentage}\r\n            />\r\n          </ul>\r\n        </Section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Counter.defaultProps = {\r\n//   good: 0,\r\n//   neutral: 0,\r\n//   bad: 0,\r\n// };\r\n\r\n// Counter.propTypes = {\r\n//   good: PropTypes.number.isRequired,\r\n//   neutral: PropTypes.number.isRequired,\r\n//   bad: PropTypes.number.isRequired,\r\n// };\r\n","import './App.css';\nimport Counter from './Counter/Counter';\n\nfunction App() {\n  return (\n    <>\n      <Counter good={0} neutral={0} bad={0} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}